
name:  Test Binary Wheels

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 311
            platform_id: macosx_x86_64

          # MacOS arm64 - Re-enable after github CI supports M1 runners:
          #   https://github.com/actions/virtual-environments/issues/2187
          #
          #  Note:  this may also require a revisit of clang / cereal errors.
          #
          # - os: macos-11
          #   python: 39
          #   platform_id: macosx_arm64
          # - os: macos-11
          #   python: 310
          #   platform_id: macosx_arm64
    env:
      CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
      CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
      CIBW_BUILD_VERBOSITY: 3
      CIBW_ENVIRONMENT_LINUX: "CC=gcc CXX=g++ CFLAGS='-O3 -g -fPIC' CXXFLAGS='-O3 -g -fPIC -std=c++14' BOOST_ROOT=/usr/local"
      CIBW_ENVIRONMENT_MACOS: "CC=gcc-12 CXX=g++-12 CFLAGS='-O3 -g -fPIC' CXXFLAGS='-O3 -g -fPIC -std=c++14' BOOST_ROOT=/usr/local FLAC_ROOT=/usr/local"
      CIBW_BEFORE_BUILD_LINUX: ./wheels/install_deps_linux.sh
      CIBW_BEFORE_BUILD_MACOS: ./wheels/install_deps_osx.sh ${{ matrix.platform_id }}
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: ./wheels/repair_wheel_linux.sh {dest_dir} {wheel}
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: ./wheels/repair_wheel_macos.sh {dest_dir} {wheel} {delocate_archs}
      CIBW_BEFORE_TEST: export OMP_NUM_THREADS=2
      CIBW_TEST_REQUIRES: pytest
      CIBW_TEST_COMMAND: >
        python -c 'import so3g.smurf.reader; from spt3g import core' &&
        python -m pytest {package}/test
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.1

      - name: Build wheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/so3g*.whl
