diff -urN spt3g_software_orig/calibration/python/bolopropertiesutils.py spt3g_software/calibration/python/bolopropertiesutils.py
--- spt3g_software_orig/calibration/python/bolopropertiesutils.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/calibration/python/bolopropertiesutils.py	2020-12-20 07:02:30.227307972 -0800
@@ -1,5 +1,5 @@
-from spt3g.calibration import BolometerProperties
-from spt3g import core
+from .libcalibration import BolometerProperties
+from .. import core
 import math

 __all__ = ['SplitByProperty', 'SplitByBand', 'SplitTimestreamsByBand',
diff -urN spt3g_software_orig/calibration/python/build_cal_frames.py spt3g_software/calibration/python/build_cal_frames.py
--- spt3g_software_orig/calibration/python/build_cal_frames.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/calibration/python/build_cal_frames.py	2020-12-20 07:02:44.754392549 -0800
@@ -1,6 +1,6 @@
-from spt3g import core
-from spt3g.calibration import BolometerProperties, BolometerPropertiesMap
-from spt3g.calibration import PointingProperties, PointingPropertiesMap
+from .. import core
+from .libcalibration import BolometerProperties, BolometerPropertiesMap
+from .libcalibration import PointingProperties, PointingPropertiesMap
 import numpy, scipy.stats, os, re

 '''
diff -urN spt3g_software_orig/calibration/python/__init__.py spt3g_software/calibration/python/__init__.py
--- spt3g_software_orig/calibration/python/__init__.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/calibration/python/__init__.py	2020-12-20 06:44:37.056246118 -0800
@@ -1,5 +1,5 @@
-from spt3g.core.load_pybindings import load_pybindings
-load_pybindings(__name__, __path__)
+# Import all our compiled tools
+from .libcalibration import *

 from . import build_cal_frames

diff -urN spt3g_software_orig/calibration/src/python.cxx spt3g_software/calibration/src/python.cxx
--- spt3g_software_orig/calibration/src/python.cxx	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/calibration/src/python.cxx	2020-12-20 06:39:27.494383205 -0800
@@ -2,15 +2,14 @@

 namespace bp = boost::python;

-BOOST_PYTHON_MODULE(calibration)
+BOOST_PYTHON_MODULE(libcalibration)
 {
 	// Python bindings dependencies
-	bp::import("spt3g.core");
+	bp::import("spt3g.libcore");

 	// Disable noise in doc strings
 	bp::docstring_options docopts(true, true, false);

 	// Python bindings for this module
-	G3ModuleRegistrator::CallRegistrarsFor("calibration");
+	G3ModuleRegistrator::CallRegistrarsFor("libcalibration");
 }
-
diff -urN spt3g_software_orig/core/python/dataextensions.py spt3g_software/core/python/dataextensions.py
--- spt3g_software_orig/core/python/dataextensions.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/dataextensions.py	2020-12-20 07:05:25.601722855 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import G3Bool, G3Int, G3Double, G3String
+from .libcore import G3Bool, G3Int, G3Double, G3String

 __all__ = []

diff -urN spt3g_software_orig/core/python/docparser.py spt3g_software/core/python/docparser.py
--- spt3g_software_orig/core/python/docparser.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/docparser.py	2020-12-20 07:05:34.375499780 -0800
@@ -1,5 +1,5 @@
 import sys, inspect, re, textwrap
-from spt3g.core import G3Module, G3FrameObject
+from .libcore import G3Module, G3FrameObject

 def format_doc(x, simple=False):
     """
diff -urN spt3g_software_orig/core/python/frameextensions.py spt3g_software/core/python/frameextensions.py
--- spt3g_software_orig/core/python/frameextensions.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/frameextensions.py	2020-12-20 07:05:42.941115023 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import G3Frame, G3FrameType
+from .libcore import G3Frame, G3FrameType

 @staticmethod
 def str_to_frame_types(types):
diff -urN spt3g_software_orig/core/python/g3decorators.py spt3g_software/core/python/g3decorators.py
--- spt3g_software_orig/core/python/g3decorators.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/g3decorators.py	2020-12-20 07:05:57.023552369 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import G3FrameType
+from .libcore import G3FrameType
 from copy import copy
 import inspect
 import textwrap
diff -urN spt3g_software_orig/core/python/G3File.py spt3g_software/core/python/G3File.py
--- spt3g_software_orig/core/python/G3File.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/G3File.py	2020-12-20 07:06:03.724630450 -0800
@@ -1,6 +1,6 @@
-from spt3g.core import G3Reader
+from .libcore import G3Reader

-class G3File(object):
+class G3File(object):
 	'''Iterable class for G3 files, as created by G3Writer. Loop through frames by doing something like:
 	f = core.G3File('/path/to/file.g3')
 	for frame in f:
diff -urN spt3g_software_orig/core/python/G3FileStager.py spt3g_software/core/python/G3FileStager.py
--- spt3g_software_orig/core/python/G3FileStager.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/G3FileStager.py	2020-12-20 07:06:24.383687572 -0800
@@ -16,20 +16,20 @@
 import subprocess
 import re

-from spt3g.core import G3Reader, G3Writer, G3FrameType
-from spt3g.core import g3logging as logging
+from .libcore import G3Reader, G3Writer, G3FrameType
+from .libcore import g3logging as logging

 class GridFTPStager(object):
     """
     Provides to subprocess calls to stage files in and out using GridFTP
diff -urN spt3g_software_orig/core/python/g3logging.py spt3g_software/core/python/g3logging.py
--- spt3g_software_orig/core/python/g3logging.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/g3logging.py	2020-12-20 07:06:39.397706355 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import G3Logger, G3LogLevel
+from .libcore import G3Logger, G3LogLevel
 import traceback
 from functools import reduce

diff -urN spt3g_software_orig/core/python/__init__.py spt3g_software/core/python/__init__.py
--- spt3g_software_orig/core/python/__init__.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/__init__.py	2020-12-20 07:05:12.986913795 -0800
@@ -1,7 +1,7 @@
-from spt3g.core.load_pybindings import load_pybindings
-load_pybindings(__name__, __path__)
+# Import all our compiled tools
+from .libcore import *

-from spt3g.core.g3logging import log_trace, log_debug, log_info, log_notice, log_warn, log_error, log_fatal, set_log_level
+from .g3logging import log_trace, log_debug, log_info, log_notice, log_warn, log_error, log_fatal, set_log_level

 import atexit
 def fix_logging_crash():
@@ -11,22 +11,22 @@
 atexit.register(fix_logging_crash)
 del fix_logging_crash

-from spt3g.core.G3File import G3File
-from spt3g.core.modconstruct import pipesegment, indexmod, pipesegment_nodoc
-from spt3g.core.funcconstruct import usefulfunc
+from .G3File import G3File
+from .modconstruct import pipesegment, indexmod, pipesegment_nodoc
+from .funcconstruct import usefulfunc
 try:
-	from spt3g.core.parse_pipeline_graph import plot_frame_processing_info
+	from .parse_pipeline_graph import plot_frame_processing_info
 except ImportError:
 	pass
 try:
-	from spt3g.core.multiprocess import Subproc
+	from .multiprocess import Subproc
 except ImportError:
 	pass
-from spt3g.core.util import *
+from .util import *

-from spt3g.core.docparser import *
-from spt3g.core.dataextensions import *
-from spt3g.core.frameextensions import *
-from spt3g.core.timestreamextensions import *
+from .docparser import *
+from .dataextensions import *
+from .frameextensions import *
+from .timestreamextensions import *

-from spt3g.core.g3decorators import cache_frame_data, scan_func_cache_data
+from .g3decorators import cache_frame_data, scan_func_cache_data
diff -urN spt3g_software_orig/core/python/load_pybindings.py spt3g_software/core/python/load_pybindings.py
--- spt3g_software_orig/core/python/load_pybindings.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/load_pybindings.py	1969-12-31 16:00:00.000000000 -0800
@@ -1,27 +0,0 @@
-import platform,sys
-
-if platform.system().startswith('freebsd') or platform.system().startswith('FreeBSD'):
-	# C++ modules are extremely fragile when loaded with RTLD_LOCAL,
-	# which is what Python uses on FreeBSD by default, and maybe other
-	# systems. Convince it to use RTLD_GLOBAL.
-
-	# See thread by Abrahams et al:
-	# http://mail.python.org/pipermail/python-dev/2002-May/024074.html
-	sys.setdlopenflags(0x102)
-
-if platform.system().startswith('Darwin'):
-    # OSX compatibility requires .dylib suffix
-    lib_suffix = ".dylib"
-else:
-    lib_suffix = ".so"
-
-def load_pybindings(name, path):
-	import imp, sys
-	mod = sys.modules[name]
-	m = imp.load_dynamic(name, path[0] + lib_suffix)
-	sys.modules[name] = mod # Don't override Python mod with C++
-
-	for (k,v) in m.__dict__.items():
-		if not k.startswith("_"):
-			mod.__dict__[k] = v
-
diff -urN spt3g_software_orig/core/python/modconstruct.py spt3g_software/core/python/modconstruct.py
--- spt3g_software_orig/core/python/modconstruct.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/modconstruct.py	2020-12-20 07:17:05.941488674 -0800
@@ -1,6 +1,6 @@
-from spt3g.core import G3Module, G3Pipeline, G3PipelineInfo, G3Frame, G3FrameType, G3Time, G3ModuleConfig, log_fatal
+from .libcore import G3Module, G3Pipeline, G3PipelineInfo, G3Frame, G3FrameType, G3Time, G3ModuleConfig, log_fatal
 try:
-    from spt3g.core import multiprocess
+    from . import multiprocess
     multiproc_avail = True
 except ImportError:
     multiproc_avail = False
@@ -131,7 +131,7 @@

 class _add_pipeline_info(G3Module):
     def __init__(self):
-        from spt3g import version
+        from .. import version
         import socket, getpass

         G3Module.__init__(self)
diff -urN spt3g_software_orig/core/python/multiprocess.py spt3g_software/core/python/multiprocess.py
--- spt3g_software_orig/core/python/multiprocess.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/multiprocess.py	2020-12-20 07:07:23.947028097 -0800
@@ -5,7 +5,7 @@
 from multiprocessing import Process
 import socket, pickle, errno, struct, time

-from spt3g.core import G3FrameType, G3Frame
+from .libcore import G3FrameType, G3Frame

 class Subproc(Process):
     '''
diff -urN spt3g_software_orig/core/python/timestreamextensions.py spt3g_software/core/python/timestreamextensions.py
--- spt3g_software_orig/core/python/timestreamextensions.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/timestreamextensions.py	2020-12-20 07:08:42.846830991 -0800
@@ -1,6 +1,7 @@
 import numpy
-from spt3g.core import G3Timestream, DoubleVector, G3VectorDouble, G3TimestreamMap, G3Time, usefulfunc
-from spt3g.core import G3Units, log_fatal, log_warn
+from .libcore import G3Timestream, DoubleVector, G3VectorDouble, G3TimestreamMap, G3Time,
+from .funcconstruct import usefulfunc
+from .libcore import G3Units, log_fatal, log_warn

 __all__ = ['concatenate_timestreams']

diff -urN spt3g_software_orig/core/python/util.py spt3g_software/core/python/util.py
--- spt3g_software_orig/core/python/util.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/python/util.py	2020-12-20 07:08:53.050481794 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import indexmod, pipesegment, G3FrameType, log_fatal, G3Reader, G3NetworkSender
+from .libcore import indexmod, pipesegment, G3FrameType, log_fatal, G3Reader, G3NetworkSender

 @indexmod
 def Delete(frame, keys=[], type=None):
diff -urN spt3g_software_orig/core/src/python.cxx spt3g_software/core/src/python.cxx
--- spt3g_software_orig/core/src/python.cxx	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/core/src/python.cxx	2020-12-20 06:57:05.619279197 -0800
@@ -354,7 +354,7 @@
 numpy_vector_infrastructure(std::complex<double>, cxdouble, "Zd");
 numpy_vector_infrastructure(std::complex<float>, cxfloat, "Zf");

-BOOST_PYTHON_MODULE(core)
+BOOST_PYTHON_MODULE(libcore)
 {
 	bp::docstring_options docopts(true, true, false);

@@ -568,6 +568,5 @@
 	enum_none_converter::from_python<G3Timestream::TimestreamUnits>();

 	// Do everything else
-	G3ModuleRegistrator::CallRegistrarsFor("core");
+	G3ModuleRegistrator::CallRegistrarsFor("libcore");
 }
-
diff -urN spt3g_software_orig/dfmux/python/DataQualityTools.py spt3g_software/dfmux/python/DataQualityTools.py
--- spt3g_software_orig/dfmux/python/DataQualityTools.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/DataQualityTools.py	2020-12-20 07:00:09.840263448 -0800
@@ -1,5 +1,5 @@
-from spt3g import core
-from spt3g.dfmux import DfMuxMetaSample
+from .. import core
+from .libdfmux import DfMuxMetaSample
 import numpy as np

 def get_empty_timepoint(sample_time):
diff -urN spt3g_software_orig/dfmux/python/HardwareMapTools.py spt3g_software/dfmux/python/HardwareMapTools.py
--- spt3g_software_orig/dfmux/python/HardwareMapTools.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/HardwareMapTools.py	2020-12-20 07:11:04.055447506 -0800
@@ -1,5 +1,5 @@
-from spt3g import core
-from spt3g.dfmux import DfMuxWiringMap, DfMuxChannelMapping
+from .. import core
+from .libdfmux import DfMuxWiringMap, DfMuxChannelMapping
 import struct, socket

 '''
@@ -114,14 +114,14 @@
     '''
     Insert a calibration frame following any wiring frame containing a
     BolometerPropertiesMap named "NominalBolometerProperties" that has
-    the properties of each bolometer as defined by the given pydfmux
+    the properties of each bolometer as defined by the given pydfmux
     hardware map.
     '''

     if frame.type != core.G3FrameType.Wiring:
         return

-    from spt3g import calibration
+    from .. import calibration
     from pydfmux.core import dfmux as pydfmux

     cal = core.G3Frame(core.G3FrameType.Calibration)
diff -urN spt3g_software_orig/dfmux/python/Housekeeping.py spt3g_software/dfmux/python/Housekeeping.py
--- spt3g_software_orig/dfmux/python/Housekeeping.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/Housekeeping.py	2020-12-20 07:00:45.862730247 -0800
@@ -1,7 +1,7 @@
-from spt3g import core
-from spt3g.dfmux import DfMuxHousekeepingMap, HkBoardInfo, HkMezzanineInfo, HkModuleInfo, HkChannelInfo, DfMuxWiringMap, DfMuxChannelMapping
+from .. import core
+from .libdfmux import DfMuxHousekeepingMap, HkBoardInfo, HkMezzanineInfo, HkModuleInfo, HkChannelInfo, DfMuxWiringMap, DfMuxChannelMapping

-from spt3g.dfmux.IceboardConversions import convert_TF
+from .libdfmux.IceboardConversions import convert_TF
 from .TuberClient import TuberClient
 import socket, struct, time
 import numpy
diff -urN spt3g_software_orig/dfmux/python/__init__.py spt3g_software/dfmux/python/__init__.py
--- spt3g_software_orig/dfmux/python/__init__.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/__init__.py	2020-12-20 06:43:13.644237875 -0800
@@ -1,5 +1,5 @@
-from spt3g.core.load_pybindings import load_pybindings
-load_pybindings(__name__, __path__)
+# Import all our compiled tools
+from .libdfmux import *

 from .HardwareMapTools import (
     GenerateFakeHardwareMap,
diff -urN spt3g_software_orig/dfmux/python/LegacyHousekeeping.py spt3g_software/dfmux/python/LegacyHousekeeping.py
--- spt3g_software_orig/dfmux/python/LegacyHousekeeping.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/LegacyHousekeeping.py	2020-12-20 07:01:19.039280546 -0800
@@ -1,5 +1,5 @@
-from spt3g import core
-from spt3g.dfmux import DfMuxHousekeepingMap, HkBoardInfo, HkMezzanineInfo, HkModuleInfo, HkChannelInfo
+from .. import core
+from .libdfmux import DfMuxHousekeepingMap, HkBoardInfo, HkMezzanineInfo, HkModuleInfo, HkChannelInfo
 from .TuberClient import TuberClient
 import socket, struct, time

diff -urN spt3g_software_orig/dfmux/python/ScanTools.py spt3g_software/dfmux/python/ScanTools.py
--- spt3g_software_orig/dfmux/python/ScanTools.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/ScanTools.py	2020-12-20 07:01:25.766157806 -0800
@@ -1,4 +1,4 @@
-from spt3g import core
+from .. import core

 @core.indexmod
 class FixedLengthScans(object):
diff -urN spt3g_software_orig/dfmux/python/unittransforms.py spt3g_software/dfmux/python/unittransforms.py
--- spt3g_software_orig/dfmux/python/unittransforms.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/python/unittransforms.py	2020-12-20 07:11:30.952458137 -0800
@@ -1,9 +1,9 @@
 import numpy
-from spt3g import core
-from spt3g.dfmux import HousekeepingForBolo
+from .. import core
+from .libdfmux import HousekeepingForBolo

 # Transfer functions for 3G and SPTpol boards
-from spt3g.dfmux import IceboardConversions
+from . import IceboardConversions
 from .wtl_ConvertUtils import convert_squid, convert_demod, convert_mb

 def counts_to_rms_amps(wiringmap, hkmap, bolo, system, tf=None):
diff -urN spt3g_software_orig/dfmux/src/python.cxx spt3g_software/dfmux/src/python.cxx
--- spt3g_software_orig/dfmux/src/python.cxx	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/dfmux/src/python.cxx	2020-12-20 06:39:45.917880947 -0800
@@ -2,15 +2,14 @@

 namespace bp = boost::python;

-BOOST_PYTHON_MODULE(dfmux)
+BOOST_PYTHON_MODULE(libdfmux)
 {
 	// Python bindings dependencies
-	bp::import("spt3g.core");
+	bp::import("spt3g.libcore");

 	// Disable noise in doc strings
 	bp::docstring_options docopts(true, true, false);

 	// Python bindings for this module
-	G3ModuleRegistrator::CallRegistrarsFor("dfmux");
+	G3ModuleRegistrator::CallRegistrarsFor("libdfmux");
 }
-
diff -urN spt3g_software_orig/gcp/python/ARCExtractor.py spt3g_software/gcp/python/ARCExtractor.py
--- spt3g_software_orig/gcp/python/ARCExtractor.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/ARCExtractor.py	2020-12-20 06:58:43.457335679 -0800
@@ -1,20 +1,20 @@
 import numpy, copy
-from spt3g import core
-from spt3g.gcp import ACUStatus, ACUState, TrackerStatus, TrackerState, TrackerPointing, CalFile
+from .. import core
+from .libgcp import ACUStatus, ACUState, TrackerStatus, TrackerState, TrackerPointing, CalFile

 @core.indexmod
 def UnitValue(caldict_entry):
     '''Turn unit name into floating point unit value'''

diff -urN spt3g_software_orig/gcp/python/ARCHKExtractor.py spt3g_software/gcp/python/ARCHKExtractor.py
--- spt3g_software_orig/gcp/python/ARCHKExtractor.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/ARCHKExtractor.py	2020-12-20 06:58:56.811350515 -0800
@@ -1,5 +1,6 @@
 import numpy
-from spt3g import core, dfmux
+from .. import core
+from .. import dfmux

 @core.indexmod
 class UnpackSPTpolHKData(object):
diff -urN spt3g_software_orig/gcp/python/CalFile.py spt3g_software/gcp/python/CalFile.py
--- spt3g_software_orig/gcp/python/CalFile.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/CalFile.py	2020-12-20 06:59:02.769411653 -0800
@@ -1,11 +1,11 @@
-from spt3g import core
+from .. import core
 import os, time
 import numpy as np

 @core.indexmod
 class CalFileReader(object):
     '''
diff -urN spt3g_software_orig/gcp/python/GCPDataTee.py spt3g_software/gcp/python/GCPDataTee.py
--- spt3g_software_orig/gcp/python/GCPDataTee.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/GCPDataTee.py	2020-12-20 06:59:19.557172007 -0800
@@ -1,5 +1,6 @@
 import struct, socket, errno, numpy, time, threading
-from spt3g import core, dfmux
+from .. import core
+from .. dfmux

 @core.indexmod
 class GCPWatchdog(object):
diff -urN spt3g_software_orig/gcp/python/InfluxDB.py spt3g_software/gcp/python/InfluxDB.py
--- spt3g_software_orig/gcp/python/InfluxDB.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/InfluxDB.py	2020-12-20 06:59:27.920892764 -0800
@@ -1,7 +1,7 @@
 import numpy as np
 import re
 import datetime as dt
-from spt3g import core
+from .. import core
 from . import ARCExtractor

 def build_field_list(fr):
diff -urN spt3g_software_orig/gcp/python/__init__.py spt3g_software/gcp/python/__init__.py
--- spt3g_software_orig/gcp/python/__init__.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/python/__init__.py	2020-12-20 06:42:52.696805661 -0800
@@ -1,5 +1,5 @@
-from spt3g.core.load_pybindings import load_pybindings
-load_pybindings(__name__, __path__)
+# Import all our compiled tools
+from .libgcp import *

 from .ARCExtractor import UnpackACUData, UnpackTrackerData, DecryptFeatureBit, ARCExtract, ARCExtractMinimal
 from .ARCHKExtractor import UnpackSPTpolHKData
diff -urN spt3g_software_orig/gcp/src/python.cxx spt3g_software/gcp/src/python.cxx
--- spt3g_software_orig/gcp/src/python.cxx	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/gcp/src/python.cxx	2020-12-20 06:39:39.970043055 -0800
@@ -7,9 +7,9 @@

 namespace bp = boost::python;

-BOOST_PYTHON_MODULE(gcp)
+BOOST_PYTHON_MODULE(libgcp)
 {
-	bp::import("spt3g.core");
+	bp::import("spt3g.libcore");
 	bp::docstring_options docopts(true, true, false);

 	// Supported Experiments
@@ -19,6 +19,5 @@
 		.value("PB",    Experiment::PB)
 	;

-	G3ModuleRegistrator::CallRegistrarsFor("gcp");
+	G3ModuleRegistrator::CallRegistrarsFor("libgcp");
 }
-
diff -urN spt3g_software_orig/maps/python/azel.py spt3g_software/maps/python/azel.py
--- spt3g_software_orig/maps/python/azel.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/azel.py	2020-12-20 06:47:57.299136556 -0800
@@ -3,7 +3,7 @@
 import astropy.coordinates, astropy.units, astropy.time
 from astropy.utils import iers

-from spt3g import core
+from .. import core

 spt = astropy.coordinates.EarthLocation(
     lat=-89.991066 * astropy.units.deg,
diff -urN spt3g_software_orig/maps/python/coordsysmodules.py spt3g_software/maps/python/coordsysmodules.py
--- spt3g_software_orig/maps/python/coordsysmodules.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/coordsysmodules.py	2020-12-20 06:53:28.132435161 -0800
@@ -1,9 +1,9 @@
-from spt3g import core
-from spt3g.core import G3TimestreamQuat
-from spt3g.maps.azel import convert_azel_to_radec
-from spt3g.maps import MapCoordReference
-from spt3g.maps import create_det_az_el_trans, create_lazy_det_ra_dec_trans
-from spt3g.maps import create_det_ra_dec_trans, convert_ra_dec_trans_to_gal
+from .. import core
+from ..core import G3TimestreamQuat
+from .azel import convert_azel_to_radec
+from .libmaps import MapCoordReference
+from .libmaps import create_det_az_el_trans, create_lazy_det_ra_dec_trans
+from .libmaps import create_det_ra_dec_trans, convert_ra_dec_trans_to_gal


 __all__ = [
diff -urN spt3g_software_orig/maps/python/fitsio.py spt3g_software/maps/python/fitsio.py
--- spt3g_software_orig/maps/python/fitsio.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/fitsio.py	2020-12-20 06:53:55.542268586 -0800
@@ -1,6 +1,6 @@
-from spt3g import core
-from spt3g.maps import HealpixSkyMap, FlatSkyMap, G3SkyMapWeights
-from spt3g.maps import MapPolType, MapPolConv, MapCoordReference, MapProjection
+from .. import core
+from .libmaps import HealpixSkyMap, FlatSkyMap, G3SkyMapWeights
+from .libmaps import MapPolType, MapPolConv, MapCoordReference, MapProjection

 import numpy as np
 import os
diff -urN spt3g_software_orig/maps/python/__init__.py spt3g_software/maps/python/__init__.py
--- spt3g_software_orig/maps/python/__init__.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/__init__.py	2020-12-20 06:41:50.850483422 -0800
@@ -1,5 +1,5 @@
-from spt3g.core.load_pybindings import load_pybindings
-load_pybindings(__name__, __path__)
+# Import all our compiled tools
+from .libmaps import *

 # Just run this, no symbols we need though
 from .skymapaddons import *
diff -urN spt3g_software_orig/maps/python/map_modules.py spt3g_software/maps/python/map_modules.py
--- spt3g_software_orig/maps/python/map_modules.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/map_modules.py	2020-12-20 06:55:39.642079951 -0800
@@ -1,4 +1,5 @@
-from spt3g import core, maps
+from .. import core
+from . import libmaps as maps
 import numpy as np

 __all__ = [
diff -urN spt3g_software_orig/maps/python/maputils.py spt3g_software/maps/python/maputils.py
--- spt3g_software_orig/maps/python/maputils.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/maputils.py	2020-12-20 06:56:04.420119423 -0800
@@ -1,4 +1,5 @@
-from spt3g import core, maps
+from .. import core
+from . import libmaps as maps

 import numpy as np

diff -urN spt3g_software_orig/maps/python/quathelpers.py spt3g_software/maps/python/quathelpers.py
--- spt3g_software_orig/maps/python/quathelpers.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/quathelpers.py	2020-12-20 06:56:22.481986256 -0800
@@ -1,4 +1,4 @@
-from spt3g.core import G3Units, quat, G3VectorQuat, G3TimestreamQuat, usefulfunc, indexmod
+from ..core import G3Units, quat, G3VectorQuat, G3TimestreamQuat, usefulfunc, indexmod
 import numpy


diff -urN spt3g_software_orig/maps/python/skymapaddons.py spt3g_software/maps/python/skymapaddons.py
--- spt3g_software_orig/maps/python/skymapaddons.py	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/python/skymapaddons.py	2020-12-20 06:56:36.063546267 -0800
@@ -1,6 +1,6 @@
 import numpy
 import warnings
-from spt3g.maps import G3SkyMapWeights, G3SkyMap
+from .libmaps import G3SkyMapWeights, G3SkyMap

 # This file adds extra functionality to the python interface to G3SkyMap and
 # G3SkyMapWeights. This is done in ways that exploit a large fraction of
diff -urN spt3g_software_orig/maps/src/python.cxx spt3g_software/maps/src/python.cxx
--- spt3g_software_orig/maps/src/python.cxx	2020-12-10 07:52:41.000000000 -0800
+++ spt3g_software/maps/src/python.cxx	2020-12-20 06:39:21.146556347 -0800
@@ -3,11 +3,10 @@

 namespace bp = boost::python;

-BOOST_PYTHON_MODULE(maps)
+BOOST_PYTHON_MODULE(libmaps)
 {
-	bp::import("spt3g.core");
+	bp::import("spt3g.libcore");
 	bp::docstring_options docopts(true, true, false);
 	maputils_pybindings();
-	G3ModuleRegistrator::CallRegistrarsFor("maps");
+	G3ModuleRegistrator::CallRegistrarsFor("libmaps");
 }
-
