
name:  Test Binary Wheels

on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.builder }}_${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          # Linux 64 bit manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 38
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 39
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 310
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 311
            builder: manylinux

          # MacOS x86_64.  The macos-13 runner is the last
          # Intel-based runner version.  At some point we'll
          # need to switch to macos-14 and test cross compiling.
          - os: macos-13
            arch: x86_64
            python: 39
            builder: macosx
          - os: macos-13
            arch: x86_64
            python: 310
            builder: macosx
          - os: macos-13
            arch: x86_64
            python: 311
            builder: macosx
    env:
      CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.builder }}_${{ matrix.arch }}
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.builder }}2014
      CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.builder }}2014
      CIBW_BUILD_VERBOSITY: 3
      CIBW_ENVIRONMENT_LINUX: "CC=gcc CXX=g++ CFLAGS='-O3 -g -fPIC' CXXFLAGS='-O3 -g -fPIC -std=c++14' BOOST_ROOT=/usr/local"
      CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=13.0 CC=gcc-14 CXX=g++-14 CFLAGS='-O3 -g -fPIC' CXXFLAGS='-O3 -g -fPIC -std=c++14' BOOST_ROOT=/usr/local FLAC_ROOT=/usr/local BLAS_LIBRARIES=/usr/local/lib/libscipy_openblas.dylib"
      CIBW_BEFORE_BUILD_LINUX: ./wheels/install_deps_linux.sh
      CIBW_BEFORE_BUILD_MACOS: ./wheels/install_deps_osx.sh ${{ matrix.builder }}_${{ matrix.arch }}
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: ./wheels/repair_wheel_linux.sh {dest_dir} {wheel}
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: ./wheels/repair_wheel_macos.sh {dest_dir} {wheel} {delocate_archs}
      CIBW_BEFORE_TEST: export OMP_NUM_THREADS=2
      CIBW_TEST_REQUIRES: pytest
      CIBW_TEST_COMMAND: >
        python -c 'import so3g.smurf.reader; from spt3g import core' &&
        python -m pytest {package}/test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.20.0

      - name: Build wheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels_cp${{ matrix.python }}-${{ matrix.builder }}
          path: ./wheelhouse/so3g*cp${{ matrix.python }}-${{ matrix.builder }}*.whl
